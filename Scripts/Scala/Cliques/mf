#!/bin/bash

POSITIONAL_ARGS=()
while [[ $# -gt 0 ]]; do
    case $1 in
	-i|--input)
	    INPUT="$2"
	    shift
	    shift
	    ;;
	-e|--epsilon)
	    EPSILON="$2"
	    shift # past argument
	    shift # past value
	    ;;
	-m|--mu)
	    MU="$2"
	    shift # past argument
	    shift # past value
	    ;;
	-d|--delta)
	    DELTA="$2"
	    shift # past argument
	    shift # past value
	    ;;
	-c|--capacity)
	    CAPACITY="$2"
	    shift # past argument
	    shift # past value
	    ;;
	-f|--fraction)
	    FRACTION="$2"
	    shift # past argument
	    shift # past value
	    ;;
	-n|--density)
	    DENSITY="$2"
	    shift # past argument
	    shift # past value
	    ;;
	-t|--tolerance)
	    TOLERANCE="$2"
	    shift # past argument
	    shift # past value
	    ;;
	-m|--master)
	    MASTER="$2"
	    shift # past argument
	    shift # past value
	    ;;	
	-x|--executors)
	    EXECUTORS=$2
	    shift # past argument
	    shift # past value
	    ;;	
	--debug)
	    DEBUG="--debug"
	    shift # past argument
	    ;;
	--cached)
	    CACHED="--cached"
	    shift # past argument
	    ;;
	-w|--wait)
	    WAIT="$2"
	    shift # past argument
	    shift # past value
	    ;;
	-*|--*)
	    echo "Unknown option $1"
	    exit 1
	    ;;
	*)
	    POSITIONAL_ARGS+=("$1") # save positional arg
	    shift # past argument
	    ;;
    esac
done
set -- "${POSITIONAL_ARGS[@]}" # restore positional parameters

if [ -v MASTER ];    then echo "MASTER     = ${MASTER}";  else MASTER="yarn"; echo "MASTER     = yarn";       fi
if [ -v EXECUTORS ]; then echo "EXECUTORS  = $EXECUTORS"; else EXECUTORS=12;  echo "EXECUTORS  = $EXECUTORS"; fi
if [ -v WAIT ];      then echo "WAIT       = $WAIT";      else WAIT="0s";     echo "WAIT       = $WAIT";      fi
if [ -v CAPACITY ];  then echo "CAPACITY   = $CAPACITY";  else CAPACITY=100; fi
if [ -v FRACTION ];  then echo "FRACTION   = $FRACTION";  else FRACTION=1;   fi
if [ -v DENSITY ];   then echo "DENSITY    = $DENSITY";   else DENSITY=1000; fi
if [ -v DEBUG ];     then echo "DEBUG      = YES";        else DEBUG="";     fi
if [ -v CACHED ];    then echo "CACHED     = YES";        else CACHED="";    fi
CORES=9
DMEMORY=35g
EMEMORY=20g
MAX_RESULT_SIZE="4G"
KRYO_BUFFER_MAX="256m"

JARS_PATH=$HOME/Spark/2.4/jars

#JARS=${JARS_PATH}/geospark-1.3.1.jar
JARS=${JARS_PATH}/jts-core-1.19.0.jar
JARS=${JARS},${JARS_PATH}/scallop_2.11-4.0.1.jar
JARS=${JARS},${JARS_PATH}/slf4j-api-1.7.25.jar
JARS=${JARS},${JARS_PATH}/archery_2.11-0.6.0.jar
JARS=${JARS},${JARS_PATH}/jgrapht-core-1.4.0.jar
JARS=${JARS},${JARS_PATH}/commons-geometry-core-1.0-beta1.jar
JARS=${JARS},${JARS_PATH}/commons-geometry-enclosing-1.0-beta1.jar
JARS=${JARS},${JARS_PATH}/commons-geometry-euclidean-1.0-beta1.jar
JARS=${JARS},${JARS_PATH}/commons-numbers-fraction-1.0-beta1.jar
JARS=${JARS},${JARS_PATH}/commons-numbers-core-1.0-beta1.jar
JARS=${JARS},${JARS_PATH}/commons-numbers-arrays-1.0-beta1.jar

LOG_FILE=$HOME/Spark/2.4/conf/log4j.properties
CLASS=edu.ucr.dblab.pflock.MF
JAR=$HOME/Research/Scripts/Scala/Cliques/target/scala-2.11/cliques_2.11-0.1.jar

PARAMS=(
    --files $LOG_FILE \
	    --conf spark.driver.extraJavaOptions=-Dlog4j.configuration=file:$LOG_FILE \
	    --conf spark.driver.maxResultSize=$MAX_RESULT_SIZE \
	    --conf spark.kryoserializer.buffer.max=$KRYO_BUFFER_MAX \
	    --conf spark.locality.wait=$WAIT \
	    --jars $JARS \
	    --master $MASTER --deploy-mode client \
	    --num-executors $EXECUTORS --executor-cores $CORES \
	    --executor-memory $EMEMORY --driver-memory $DMEMORY \
	    --class $CLASS $JAR \
	    --input $INPUT $DEBUG $CACHED --epsilon $EPSILON --mu $MU --delta $DELTA --capacity $CAPACITY --fraction $FRACTION --density $DENSITY
)

echo "spark-submit ${PARAMS[@]}"
spark-submit ${PARAMS[@]}
